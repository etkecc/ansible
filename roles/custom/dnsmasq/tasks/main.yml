---
- name: Ensure dnsmasq image is pulled
  docker_image:
    name: "{{ custom_dnsmasq_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ custom_dnsmasq_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else custom_dnsmasq_docker_image_force_pull }}"
  when: custom_dnsmasq_enabled|bool
  tags:
    - setup-all
    - setup-dnsmasq

- name: Ensure custom-dnsmasq.service is present
  template:
    src: systemd/custom-dnsmasq.service.j2
    dest: /etc/systemd/system/custom-dnsmasq.service
    mode: 0644
  register: custom_dnsmasq_systemd_service_result
  when: custom_dnsmasq_enabled|bool
  tags:
    - setup-all
    - setup-dnsmasq

- name: Stop systemd-resolved service
  service:
    enabled: no
    state: stopped
    name: systemd-resolved
  when: custom_dnsmasq_enabled|bool
  ignore_errors: yes #not all distros have it
  tags:
    - setup-all
    - setup-dnsmasq

- name: Set resolvconf config
  template:
    src: etc/resolvconf.conf.j2
    dest: /etc/resolvconf.conf
    mode: 0644
  when: custom_dnsmasq_enabled|bool
  ignore_errors: yes #not all distros have it
  tags:
    - setup-all
    - setup-dnsmasq

- name: Set fallback nameservers
  template:
    src: etc/resolv.conf.j2
    dest: /etc/resolv.conf
    mode: 0644
  when: custom_dnsmasq_enabled|bool
  tags:
    - setup-all
    - setup-dnsmasq

- name: Run custom-dnsmasq.service
  service:
    enabled: yes
    state: restarted
    name: custom-dnsmasq
  when: custom_dnsmasq_enabled|bool
  tags:
    - start
    - start-dnsmasq
