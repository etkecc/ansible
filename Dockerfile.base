ARG ALPINE
FROM registry.gitlab.com/etke.cc/base/build AS builder
ARG AGRU
ENV GOPROXY=""
RUN git clone --depth 1 -b $AGRU https://gitlab.com/etke.cc/tools/agru.git && \
    cd agru && just build && mv agru /usr/bin/agru

FROM alpine:${ALPINE}
ARG ANSIBLE
ARG ANSIBLE_CORE
ENV PATH="/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin"

COPY --from=builder /usr/bin/agru /usr/bin/agru
RUN apk --no-cache add python3 py3-cryptography py3-jinja2 py3-packaging py3-paramiko py3-resolvelib py3-yaml \
		git just openssh hugo && \
		apk --no-cache add --virtual builddeps alpine-sdk py3-pip && \
		ln -s /bin/uname /usr/local/bin/uname && \
		ln -s /bin/rm /usr/local/bin/rm && \
		ln -s /bin/sh /usr/local/bin/sh && \
		pip install --upgrade pip && \
		pip install passlib && \
		pip install ansible-core==${ANSIBLE_CORE} ansible==${ANSIBLE} && \
		pip cache purge && \
		apk del builddeps && \
		rm -rf /var/cache/apk/* && \
		rm -rf /root/.cache/pip && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/fortinet && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/cisco && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/dellemc && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/netapp && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/f5networks && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/google && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/azure && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/arista && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/junipernetworks && \
		rm -rf /usr/lib/python3.11/site-packages/ansible_collections/ovirt && \
		find / -name '*.pyc' -exec rm {} \;
